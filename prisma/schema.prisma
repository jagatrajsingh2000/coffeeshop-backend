// This is your Prisma schema file,
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  firstName String @map("first_name")
  lastName String? @map("last_name")
  profileImageURL String? @map("profile_image_url")
  email String @unique
  password String
  salt String
  cart Cart[]
  order Order[]
  @@map("users")
}

model MenuItem {
  id String @id @default(uuid())
  name String
  description String
  price Float
  mood Mood
  size Size
  sugar String
  ice String
  category Category @relation(fields: [categoryId], references: [id])
  categoryId String
  cartItem CartItem[]
  orderItem OrderItem[]
  itemImageURL String? @map("profile_image_url")

  @@map("menu_items")
}

model Category {
  id String @id @default(uuid())
  name String @unique
  menuItems MenuItem[]

  @@map("categories")
}

model Cart {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId String
  items CartItem[]

  @@map("cart")
}

model CartItem {
  id String @id @default(uuid())
  cart Cart @relation(fields: [cartId], references: [id])
  cartId String
  menuItem MenuItem @relation(fields: [menuItemId], references: [id])
  menuItemId String
  quantity Int

  @@map("cart_items")
}

model Order {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId String
  items OrderItem[]

  @@map("orders")
}
model OrderItem {
  id String @id @default(uuid())
  order Order @relation(fields: [orderId], references: [id])
  orderId String
  menuItem MenuItem @relation(fields: [menuItemId], references: [id])
  menuItemId String
  quantity Int
  notes String

  @@map("order_items")
}


enum Mood {
  HOT
  COLD
}

enum Size {
  S
  M
  L
}
